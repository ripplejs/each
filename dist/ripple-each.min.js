!function(){function t(e){var i=t.modules[e];if(!i)throw new Error('failed to require "'+e+'"');return"exports"in i||"function"!=typeof i.definition||(i.client=i.component=!0,i.definition.call(this,i.exports={},i),delete i.definition),i.exports}t.modules={},t.register=function(e,i){t.modules[e]={definition:i}},t.define=function(e,i){t.modules[e]={exports:i}},t.register("component~emitter@1.1.2",function(t,e){function i(t){return t?r(t):void 0}function r(t){for(var e in i.prototype)t[e]=i.prototype[e];return t}e.exports=i,i.prototype.on=i.prototype.addEventListener=function(t,e){return this._callbacks=this._callbacks||{},(this._callbacks[t]=this._callbacks[t]||[]).push(e),this},i.prototype.once=function(t,e){function i(){r.off(t,i),e.apply(this,arguments)}var r=this;return this._callbacks=this._callbacks||{},i.fn=e,this.on(t,i),this},i.prototype.off=i.prototype.removeListener=i.prototype.removeAllListeners=i.prototype.removeEventListener=function(t,e){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var i=this._callbacks[t];if(!i)return this;if(1==arguments.length)return delete this._callbacks[t],this;for(var r,n=0;n<i.length;n++)if(r=i[n],r===e||r.fn===e){i.splice(n,1);break}return this},i.prototype.emit=function(t){this._callbacks=this._callbacks||{};var e=[].slice.call(arguments,1),i=this._callbacks[t];if(i){i=i.slice(0);for(var r=0,n=i.length;n>r;++r)i[r].apply(this,e)}return this},i.prototype.listeners=function(t){return this._callbacks=this._callbacks||{},this._callbacks[t]||[]},i.prototype.hasListeners=function(t){return!!this.listeners(t).length}}),t.register("ripplejs~array-observer@0.3.0",function(e,i){var r=t("component~emitter@1.1.2"),n=Array.prototype.slice;i.exports=function(t){function e(){var t=this,e=this.length,i=Array.prototype.push.apply(this,arguments);return this.slice(e,this.length).forEach(function(i,r){t.emit("add",i,e+r),t.emit("change")}),i}function i(){var t=this.length,e=Array.prototype.pop.apply(this,arguments);return this.emit("remove",e,t-1),this.emit("change"),e}function s(){var t=(this.length,Array.prototype.shift.apply(this,arguments));return this.emit("remove",t,0),this.emit("change"),t}function o(){var t=this,e=this.length,i=Array.prototype.unshift.apply(this,arguments);return this.slice(0,this.length-e).forEach(function(e,i){t.emit("add",e,i),t.emit("change")}),i}function a(t){var e=this,i=Array.prototype.splice.apply(this,arguments);return i.length&&i.forEach(function(i,r){e.emit("remove",i,t+r)}),arguments.length>2&&n.call(arguments,2).forEach(function(i,r){e.emit("add",i,t+r)}),this.emit("change"),i}function c(){var t=Array.prototype.reverse.apply(this,arguments);return this.emit("sort"),this.emit("change"),t}function h(){var t=Array.prototype.sort.apply(this,arguments);return this.emit("sort"),this.emit("change"),t}r(t);var p={pop:i,push:e,reverse:c,shift:s,sort:h,splice:a,unshift:o};for(var u in p)t[u]=p[u];return t}}),t.register("each",function(e,i){var r=t("ripplejs~array-observer@0.3.0");i.exports=function(t){t.directive("each",{bind:function(e){this.View=t.create(e.innerHTML),e.innerHTML="",this.previous={}},update:function(t,e,i){function n(){t.forEach(function(t,e){t.set("$index",e).appendTo(a.node)})}function s(t,e){var r={};"object"==typeof t&&(r=t),r.$index=e,r.$value=t;var n=new o({owner:i,scope:i,data:r});return n}var o=this.View,a=this,c=!1;if(e.innerHTML="",Array.isArray(t)===!1)throw new Error(t+" should be an array");this.previous.emitter&&this.previous.emitter.off(),this.previous.items&&this.previous.items.forEach(function(t){t.destroy()}),t.forEach(function(e,i){var r=s(e,i);t.splice(i,1,r)});var h=r(t);h.on("add",function(e,i){if(!c){var r=s(e,i);c=!0,t.splice(i,1,r),c=!1,n()}}),h.on("remove",function(t){t instanceof o&&(t.destroy(),n())}),h.on("sort",function(){n()}),n(),this.previous.items=t,this.previous.emitter=h},unbind:function(){this.previous.emitter&&this.previous.emitter.off(),this.previous.items&&this.previous.items.forEach(function(t){t.destroy()}),this.previous={}}})}}),"object"==typeof exports?module.exports=t("each"):"function"==typeof define&&define.amd?define([],function(){return t("each")}):this.ripple.each=t("each")}();